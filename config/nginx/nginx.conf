user cxd cxd;
worker_processes  auto;
worker_cpu_affinity 0001 0010 0100 1000 0001 0010 0100 1000;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

worker_rlimit_nofile 65535;
events {
   use epoll;
   worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

      map $http_x_forwarded_for  $client_real_ip {
          ""  $remote_addr;
          ~^(?P<firstAddr>[0-9\.]+),?.*$  $firstAddr;
      }

    log_format  main  '$client_real_ip - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_time';

    log_format main_post '$remote_addr [$time_local] $request $status $request_time "{request_body}" ';

    # graylog 日志
    # log_format graylog2_json escape=json '{ "timestamp": "$time_iso8601", '
    #                  '"remote_addr": "$remote_addr", '
    #                  '"body_bytes_sent": $body_bytes_sent, '
    #                  '"request_time": $request_time, '
    #                  '"response_status": $status, '
    #                  '"request": "$request", '
    #                  '"request_method": "$request_method", '
    #                  '"host": "$host",'
    #                  '"upstream_cache_status": "$upstream_cache_status",'
    #                  '"upstream_addr": "$upstream_addr",'
    #                  '"http_x_forwarded_for": "$http_x_forwarded_for",'
    #                  '"http_referrer": "$http_referer", '
    #                  '"http_user_agent": "$http_user_agent" }';

    # access_log syslog:server=192.16.10.11:12304 graylog_json;

  # vts 状态加载模块 
  # https://github.com/vozlt/nginx-module-vts.git
  vhost_traffic_status_zone;

  #access_log  logs/access.log  main;
  server_names_hash_bucket_size 128;
  client_header_buffer_size 128k;
  large_client_header_buffers 4 128k;
  client_max_body_size 500m;

  server_tokens off;
  sendfile on;
  tcp_nopush     on;
  tcp_nodelay on;
 
  #  OCSP Stapling 
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 1.0.0.1 8.8.8.8 8.8.4.4 223.5.5.5 223.6.6.6 valid=60s;   
  resolver_timeout 2s;
  
  keepalive_timeout 60;
  client_header_timeout 15;
  client_body_timeout 15;
  send_timeout 15;

# fastcgi 缓冲区 和 超时时间 
  fastcgi_connect_timeout 240;
  fastcgi_send_timeout 240;
  fastcgi_read_timeout 240;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  # 默认 /opt/nginxssl/fastcgi_temp
  # fastcgi_temp_path /opt/nginxssl/fastcgi_temp;
  # fastcgi_cache_path /opt/nginxssl/fastcgi_temp/cache levels=2:2 keys_zone=cache:128m inactive=1d max_size=6g; 	
  fastcgi_cache_path /opt/nginxssl/fastcgi_temp/ngx_fcgi_cache levels=2:2 keys_zone=ngx_fcgi_cache:512m inactive=1d max_size=40g; 

  # google 压缩模块 
  # https://github.com/google/ngx_brotli.git 
  brotli on;
  brotli_comp_level 6;
  brotli_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg image/gif image/png;
 

  limit_conn_status 503;
  # 用户的 IP 地址 $client_real_ip 作为 Key，每个 IP 地址最多有 50 个并发连接
  # 超过 50 个连接，直接返回 503 
  limit_conn_zone $client_real_ip zone=TotalConnLimitZone:20m ;
  limit_conn  TotalConnLimitZone  50;
  limit_conn_log_level notice;

  # 用户的 IP 地址 $client_real_ip 作为 Key，每个 IP 地址每秒处理 10 个请求 
  limit_req_zone $client_real_ip zone=ConnLimitZone:20m  rate=10r/s;
  # 最多有3个排队, 由于每秒处理10个请求,因此单个用户总共只会处理10+3个请求,在多就会返回503,此处设置针对全局生效 
  #limit_req zone=ConnLimitZone burst=3 nodelay;
  #limit_req zone=ConnLimitZone;
  limit_req_log_level notice; 


  server {
    listen       80;
    server_name  _;
        
    location /vts-status {
      vhost_traffic_status_display;
      vhost_traffic_status_display_format html;
    }

    set $is_elb 0;
    if ( $http_user_agent ~ "ELB-HealthChecker/2.0" ) {
      set $is_elb "${is_elb}1";
    }

    if ( $remote_addr ~* "172\.31\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)" ) {
      set $is_elb "${is_elb}2";
    }

    if ( $is_elb = "012" ){
      return 200;
    }

    return 502;
  }

  include conf.d/*.conf;
}
